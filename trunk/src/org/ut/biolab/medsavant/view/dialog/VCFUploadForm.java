/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.ut.biolab.medsavant.view.dialog;

import java.awt.Dimension;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.ut.biolab.medsavant.db.ConnectionController;
import org.ut.biolab.medsavant.db.DBUtil;
import org.ut.biolab.medsavant.util.ExtensionFileFilter;
import org.ut.biolab.medsavant.view.util.ViewUtil;

/**
 *
 * @author AndrewBrook
 */
public class VCFUploadForm extends javax.swing.JDialog {
    
    private List<String> genome_id = new ArrayList<String>();
    private List<String> species = new ArrayList<String>();
    private List<String> version = new ArrayList<String>();
    private String path;
    private File[] files;

    /** Creates new form VCFUploadForm */
    public VCFUploadForm() {
        
        this.setModalityType(ModalityType.APPLICATION_MODAL);
        
        Connection conn;
        try {
            conn = ConnectionController.connect();
            Statement s = conn.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM genome");
    
            while(rs.next()) {
                genome_id.add(rs.getString(1));
                species.add(rs.getString(2));
                version.add(rs.getString(3));
            }
            
        } catch (Exception ex) {
            Logger.getLogger(VCFUploadForm.class.getName()).log(Level.SEVERE, null, ex);
            return; //TODO
        }

        initComponents();          
        
        for(int i = 0; i < genome_id.size(); i++){
            genomeComboBox.addItem(species.get(i) + " - " + version.get(i));
        }
        pipelineComboBox.setEditable(false);
        
        uploadButton.setEnabled(false);
        
        this.setLocationRelativeTo(null);
        this.setVisible(true);          
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genomeComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pipelineComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        outputFileField = new javax.swing.JTextField();
        chooseFileButton = new javax.swing.JButton();
        uploadButton = new javax.swing.JButton();
        progressLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add VCF File to Database");

        jLabel1.setText("Genome: ");

        jLabel2.setText("Pipeline:");

        pipelineComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1" }));

        jLabel3.setText("File(s) to Upload: ");

        outputFileField.setEditable(false);
        outputFileField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFileFieldActionPerformed(evt);
            }
        });

        chooseFileButton.setText("...");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        uploadButton.setText("Upload");
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        progressLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        progressLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(outputFileField, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(genomeComboBox, 0, 380, Short.MAX_VALUE)
                    .addComponent(pipelineComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 380, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(progressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(uploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genomeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pipelineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseFileButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadButton)
                    .addComponent(progressLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void outputFileFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputFileFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputFileFieldActionPerformed

    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Import Variants");
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        fc.addChoosableFileFilter(new ExtensionFileFilter("vcf"));
        fc.setMultiSelectionEnabled(true);
        
        int result = fc.showDialog(null, null);
        if (result == JFileChooser.CANCEL_OPTION || result == JFileChooser.ERROR_OPTION) {
            return;
        }
        
        files = fc.getSelectedFiles();
        path = getPathString(files);
        outputFileField.setText(path);
        uploadButton.setEnabled(true);
    }//GEN-LAST:event_chooseFileButtonActionPerformed

    private String getPathString(File[] files) {
        if (files.length > 1) {
            return files.length + " files";
        } else if (files.length == 1) {
            return files[0].getAbsolutePath();
        } else {
            return "";
        }
    }
    
    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        
        final JDialog instance = this;
        this.setVisible(false);
     
        final JDialog dialog = new JDialog();
        dialog.setTitle("Import VCF");
        final JLabel progressLabel = new JLabel("Beginning import of VCF files. ");
        progressLabel.setHorizontalTextPosition(JLabel.CENTER);
        progressLabel.setHorizontalAlignment(JLabel.CENTER);
        progressLabel.setMinimumSize(new Dimension(300,70));
        progressLabel.setPreferredSize(new Dimension(300,70));
        progressLabel.setFont(ViewUtil.getMediumTitleFont());
        dialog.setContentPane(progressLabel);
        dialog.setDefaultCloseOperation(
            JDialog.DO_NOTHING_ON_CLOSE);
        dialog.setMinimumSize(new Dimension(200,50));
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
           
        Thread thread = new Thread() {
            @Override
            public void run() {
                int g_id = Integer.parseInt(genome_id.get(genomeComboBox.getSelectedIndex()));
                int p_id = Integer.parseInt(pipelineComboBox.getSelectedItem().toString());

                int currentfile = 0;
                int totalnumfiles = files.length;
                for (File f : files) {
                    currentfile++;
                    try {
                        String progress = "Importing file " + currentfile + " of " + totalnumfiles;
                        progressLabel.setText(progress);
                        System.out.println(progress);
                        DBUtil.addVcfToDb(f.getAbsolutePath(), g_id, p_id);
                        System.gc();
                    } catch (SQLException ex) {
                        Logger.getLogger(VCFUploadForm.class.getName()).log(Level.SEVERE, null, ex);
                        dialog.dispose();
                        JOptionPane.showMessageDialog(
                                null, 
                                "<HTML>There was an error importing file<BR>" + f.getAbsolutePath() + "</HTML>", 
                                "Error", 
                                JOptionPane.ERROR_MESSAGE);
                        instance.dispose();                     
                    }
                }
                instance.dispose();
                dialog.dispose();
            }
        };
        thread.start(); 
    }//GEN-LAST:event_uploadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new VCFUploadForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JComboBox genomeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField outputFileField;
    private javax.swing.JComboBox pipelineComboBox;
    private javax.swing.JLabel progressLabel;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
